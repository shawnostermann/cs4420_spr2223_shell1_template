Grammar

    0 $accept: input $end

    1 input: lines
    2      | ε

    3 lines: oneline EOLN
    4      | oneline EOLN lines

    5 oneline: expr
    6        | error

    7 expr: rhs

    8 rhs: NUMBER
    9    | NUMBER oper rhs

   10 oper: PLUS
   11     | MINUS
   12     | TIMES
   13     | DIVIDE


Terminals, with rules where they appear

    $end (0) 0
    error (256) 6
    EOLN (258) 3 4
    PLUS (259) 10
    MINUS (260) 11
    TIMES (261) 12
    DIVIDE (262) 13
    NUMBER <number> (263) 8 9


Nonterminals, with rules where they appear

    $accept (9)
        on left: 0
    input (10)
        on left: 1 2
        on right: 0
    lines (11)
        on left: 3 4
        on right: 1 4
    oneline (12)
        on left: 5 6
        on right: 3 4
    expr <pass> (13)
        on left: 7
        on right: 5
    rhs <pop> (14)
        on left: 8 9
        on right: 7 9
    oper <operator> (15)
        on left: 10 11 12 13
        on right: 9


State 0

    0 $accept: • input $end

    error   shift, and go to state 1
    NUMBER  shift, and go to state 2

    $end  reduce using rule 2 (input)

    input    go to state 3
    lines    go to state 4
    oneline  go to state 5
    expr     go to state 6
    rhs      go to state 7


State 1

    6 oneline: error •

    $default  reduce using rule 6 (oneline)


State 2

    8 rhs: NUMBER •
    9    | NUMBER • oper rhs

    PLUS    shift, and go to state 8
    MINUS   shift, and go to state 9
    TIMES   shift, and go to state 10
    DIVIDE  shift, and go to state 11

    $default  reduce using rule 8 (rhs)

    oper  go to state 12


State 3

    0 $accept: input • $end

    $end  shift, and go to state 13


State 4

    1 input: lines •

    $default  reduce using rule 1 (input)


State 5

    3 lines: oneline • EOLN
    4      | oneline • EOLN lines

    EOLN  shift, and go to state 14


State 6

    5 oneline: expr •

    $default  reduce using rule 5 (oneline)


State 7

    7 expr: rhs •

    $default  reduce using rule 7 (expr)


State 8

   10 oper: PLUS •

    $default  reduce using rule 10 (oper)


State 9

   11 oper: MINUS •

    $default  reduce using rule 11 (oper)


State 10

   12 oper: TIMES •

    $default  reduce using rule 12 (oper)


State 11

   13 oper: DIVIDE •

    $default  reduce using rule 13 (oper)


State 12

    9 rhs: NUMBER oper • rhs

    NUMBER  shift, and go to state 2

    rhs  go to state 15


State 13

    0 $accept: input $end •

    $default  accept


State 14

    3 lines: oneline EOLN •
    4      | oneline EOLN • lines

    error   shift, and go to state 1
    NUMBER  shift, and go to state 2

    $end  reduce using rule 3 (lines)

    lines    go to state 16
    oneline  go to state 5
    expr     go to state 6
    rhs      go to state 7


State 15

    9 rhs: NUMBER oper rhs •

    $default  reduce using rule 9 (rhs)


State 16

    4 lines: oneline EOLN lines •

    $default  reduce using rule 4 (lines)
